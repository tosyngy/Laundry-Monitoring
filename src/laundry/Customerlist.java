package laundry;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSetMetaData;


/**
 *
 * @author damhiesax
 */
public class Customerlist extends javax.swing.JFrame {

    DbConnect dbcon = new DbConnect();
    String key = "",key1 = "";
    Vector<String> data = new Vector<String>();
    Vector<String> data3 = new Vector<String>();
    public static String[] rowData;
    public static DefaultTableModel dataSet2;
    Vector<String> data2 = new Vector<String>();
    public static DefaultTableModel dataSet;
    public static String tick;
    StringBuffer sb = new StringBuffer();
    
    DefaultComboBoxModel combomodel;
    DefaultComboBoxModel combomodel1;

    /**
     * Creates new form Customerlist
     */
    public Customerlist() {
        initComponents();
        jTextField1.setEditable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setTitle("CUSTOMER LIST");
        userID();
        setcus();
       // getItems(key,key1);
        jTextField9.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboItemCode = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        comboItemCode1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customer Details");
        setLocationByPlatform(true);
        setResizable(false);

        jPanel1.setLayout(null);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("View All");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(10, 290, 130, 23);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Exports To Excel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(140, 290, 180, 23);

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("Close");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(430, 290, 110, 23);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable( int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 320, 550, 230);

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setText("Print");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(320, 290, 110, 23);

        jPanel2.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Mobile No");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 140, 120, 30);

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(410, 40, 110, 50);

        jButton2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(410, 100, 110, 50);
        jPanel2.add(jTextField4);
        jTextField4.setBounds(150, 140, 240, 30);
        jPanel2.add(jTextField3);
        jTextField3.setBounds(150, 100, 240, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Contact Address");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 100, 120, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Customer Name");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(30, 60, 120, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Customer ID");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(30, 20, 120, 30);
        jPanel2.add(jTextField2);
        jTextField2.setBounds(150, 60, 240, 30);

        jTextField1.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jPanel2.add(jTextField1);
        jTextField1.setBounds(150, 20, 240, 30);

        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Sans", 1, 12))); // NOI18N
        jPanel2.add(jLabel5);
        jLabel5.setBounds(10, 0, 520, 200);

        jTabbedPane1.addTab("Customer Registration", jPanel2);

        jPanel3.setLayout(null);

        jButton3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(380, 110, 150, 60);

        jButton4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);
        jButton4.setBounds(380, 180, 150, 60);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Customer ID");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(10, 210, 90, 30);
        jPanel3.add(jTextField9);
        jTextField9.setBounds(130, 220, 230, 30);
        jPanel3.add(jTextField8);
        jTextField8.setBounds(130, 180, 230, 30);

        jLabel11.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel11.setText("Phone No");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(10, 170, 80, 30);

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel10.setText("Address");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(20, 130, 80, 30);
        jPanel3.add(jTextField7);
        jTextField7.setBounds(130, 140, 230, 30);
        jPanel3.add(jTextField6);
        jTextField6.setBounds(130, 100, 230, 30);

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel9.setText("Customer Name");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(10, 100, 120, 30);

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel7.setText("Customer Name");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(30, 30, 160, 20);

        comboItemCode.setEditable(true);
        comboItemCode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        comboItemCode.setEditable(true);
        comboItemCode.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent event) {
                key1="";
                key=key+event.getKeyChar();
                if((key.length()==1)&&(event.getKeyChar()=='\b')){
                    key="";
                    return;
                }
                if(event.getKeyChar()=='\b'){
                    key=key.substring(0,key.length()-2);
                }
                if (!(event.getKeyChar() == KeyEvent.VK_ENTER)) {
                    System.out.println(""+event.getKeyChar());
                    getItems(key,key1);
                }else{
                    comboItemCode1.setSelectedIndex(comboItemCode.getSelectedIndex());
                    getItem(comboItemCode.getSelectedItem().toString(),"");
                }
            }
            public void keyPressed(KeyEvent event) {
                combomodel =new DefaultComboBoxModel();
                combomodel1 =new DefaultComboBoxModel();
                if(combomodel.getSize()==0){
                    combomodel1.addElement(key1);
                    combomodel.addElement(key);
                    comboItemCode1.setModel(combomodel1);
                    comboItemCode.setModel(combomodel);
                }else{
                    combomodel1.insertElementAt(key1,0);
                    combomodel.insertElementAt(key,0);
                    comboItemCode.setModel(combomodel);
                    comboItemCode1.setModel(combomodel1);
                }

            }
        });
        comboItemCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboItemCodeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboItemCodeMousePressed(evt);
            }
        });
        comboItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboItemCodeActionPerformed(evt);
            }
        });
        comboItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboItemCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comboItemCodeKeyTyped(evt);
            }
        });
        jPanel3.add(comboItemCode);
        comboItemCode.setBounds(330, 50, 190, 20);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setText("Customer Id");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(330, 30, 120, 20);

        comboItemCode1.setEditable(true);
        comboItemCode1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        comboItemCode1.setEditable(true);
        comboItemCode1.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent event) {
                key="";
                key1=key1+event.getKeyChar();
                if((key1.length()==1)&&(event.getKeyChar()=='\b')){
                    key1="";
                    return;
                }
                if(event.getKeyChar()=='\b'){
                    key1=key1.substring(0,key1.length()-2);
                }
                if (!(event.getKeyChar() == KeyEvent.VK_ENTER)) {
                    System.out.println(""+event.getKeyChar());
                    getItems(key,key1);
                }else{
                    comboItemCode1.setSelectedIndex(comboItemCode.getSelectedIndex());
                    getItem("",comboItemCode1.getSelectedItem().toString());

                }
            }
            public void keyPressed(KeyEvent event) {
                combomodel1 =new DefaultComboBoxModel();
                combomodel =new DefaultComboBoxModel();
                if(combomodel1.getSize()==0){
                    combomodel1.addElement(key1);
                    combomodel.addElement(key);
                    comboItemCode1.setModel(combomodel1);
                    comboItemCode.setModel(combomodel);
                }else{
                    combomodel1.insertElementAt(key1,0);
                    combomodel.insertElementAt(key,0);
                    comboItemCode.setModel(combomodel);
                    comboItemCode1.setModel(combomodel1);
                }

            }
        });
        comboItemCode1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboItemCode1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboItemCode1MousePressed(evt);
            }
        });
        comboItemCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboItemCode1ActionPerformed(evt);
            }
        });
        comboItemCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboItemCode1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comboItemCode1KeyTyped(evt);
            }
        });
        jPanel3.add(comboItemCode1);
        comboItemCode1.setBounds(30, 50, 210, 20);

        jLabel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Serach Customer"));
        jPanel3.add(jLabel8);
        jLabel8.setBounds(0, 10, 550, 80);

        jTabbedPane1.addTab("Customer Details", jPanel3);

        jPanel1.add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 560, 280);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RegUser();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clear();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       setcus();
       clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        update();
        userID();
        setcus();
        getItems("","");
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        delete();
        userID();
        setcus();
        getItems("","");
        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "Are you  sure you want to close");
        if (res == JOptionPane.YES_OPTION) {
            this.dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        MessageFormat header = new MessageFormat("Report Print");

        MessageFormat footer = new MessageFormat("Page{0,number,integer}");

        try {
            jTable1.print(JTable.PrintMode.NORMAL, header, footer);

        } catch (java.awt.print.PrinterException e) {
            System.out.println("printing not successful" + e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
//        showtext();

// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
        } else {

        }

// TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased

    private void comboItemCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboItemCodeMouseClicked
        //getItem();        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCodeMouseClicked

    private void comboItemCodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboItemCodeMousePressed
        //getItem();        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCodeMousePressed

    private void comboItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboItemCodeActionPerformed
//         if(comboItemCode.isFocusOwner()){
//      if(comboItemCode.getItemCount() >0){
          comboItemCode1.setSelectedIndex(comboItemCode.getSelectedIndex());
      getItem(comboItemCode.getSelectedItem().toString(),"");
//      }
//      }
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCodeActionPerformed

    private void comboItemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboItemCodeKeyPressed
        //  comboItemCode.addItem(key);
    }//GEN-LAST:event_comboItemCodeKeyPressed

    private void comboItemCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboItemCodeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCodeKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void comboItemCode1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboItemCode1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCode1MouseClicked

    private void comboItemCode1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboItemCode1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCode1MousePressed

    private void comboItemCode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboItemCode1ActionPerformed
//      if(comboItemCode1.isFocusOwner()){
//      if(comboItemCode1.getItemCount() >0){
           comboItemCode.setSelectedIndex(comboItemCode1.getSelectedIndex());
        getItem("",comboItemCode1.getSelectedItem().toString());
//      }
//      }
    }//GEN-LAST:event_comboItemCode1ActionPerformed

    private void comboItemCode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboItemCode1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCode1KeyPressed

    private void comboItemCode1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboItemCode1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemCode1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customerlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customerlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customerlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customerlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customerlist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboItemCode;
    private javax.swing.JComboBox comboItemCode1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void RegUser() {
        String conf = jTextField1.getText();

        try {
            //dbcon.con.setAutoCommit(false);
            String SQLCommand = "select cusid from user";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
            ResultSetMetaData md = dbcon.rs.getMetaData();
            int nColumns = md.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns];
                for (int i = 0; i < nColumns; i++) {
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data.addElement(rowData[i]);

                }
            }
            if (data.contains(conf)) {
                JOptionPane.showMessageDialog(null, "User already exist");
            } else {

                String cusid = jTextField1.getText();
                String Name = jTextField2.getText();
                String add = jTextField3.getText();
                String mobileNo = jTextField4.getText();
                String visit = "";

                if (cusid.equals(visit) || Name.equals(visit) || add.equals(visit) || mobileNo.equals(visit)) {
                    JOptionPane.showMessageDialog(null, "You can not enter a blank record");
                } else {
                    dbcon.ps = dbcon.con.prepareStatement("insert into user values (?,?,?,?)");
                    dbcon.ps.setString(1, cusid);
                    dbcon.ps.setString(2, Name);
                    dbcon.ps.setString(3, add);
                    dbcon.ps.setString(4, mobileNo);
                     dbcon.ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Customer Registered Succesfully");
                   
                 }
                setcus();
            }

        } catch (Exception g) {
            System.out.print("there is error" + g);
        }
        setcus();
    }

    public void userID() {
        try {
            int summ = 0;
            String SQLCommand2 = "select cusid from user";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand2);
            ResultSetMetaData md2 = dbcon.rs.getMetaData();
            int nColumns2 = md2.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns2];
                for (int i = 0; i < nColumns2; i++) {
                    summ = summ + 1;
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data.addElement(rowData[i]);
                }
            }

            int newbuild = 001 + summ;
            jTextField1.setText(String.valueOf("CLNRITE 0" + newbuild));
            // System.out.println("Building ID:" + "CLNRITE" + newbuild);
        } catch (Exception e) {
            System.out.println("Card number Error" + e);
        }
    }

    public void setcus() {
        dataSet = new DefaultTableModel();
        dataSet.addColumn("Customer id");
        dataSet.addColumn("Name");
        dataSet.addColumn("Address");
        dataSet.addColumn("Mobile No");
        dis();
        jTable1.setModel(dataSet);
    }

    
    
    private void dis() {
       
        try {
            int row = dataSet.getRowCount();
            while (row > 0) {
                row--;
                dataSet.removeRow(row);
            }

            //execute query
            ResultSet rs = dbcon.st.executeQuery("Select * from user");

            //get metadata
            ResultSetMetaData md = rs.getMetaData();
            int colcount = md.getColumnCount();

            Object[] data = new Object[colcount];
            //extracting data

            while (rs.next()) {
                for (int i = 1; i <= colcount; i++) {
                    data[i - 1] = rs.getString(i);
                }
                dataSet.addRow(data);
            }

        } catch (Exception g) {
            System.out.println(g);

        }
    }

    void showtext() {
//        try {
//
//            int row = jTable2.getSelectedRow();
//            String User = (jTable2.getModel().getValueAt(row, 0).toString());
//            String SQLCommand = ("select * from user where cusid='" + User + "'");
//            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
//            dbcon.rs.next();
//            jTextField9.setText(dbcon.rs.getString(1));
//            jTextField6.setText(dbcon.rs.getString(2));
//            jTextField7.setText(dbcon.rs.getString(3));
//            jTextField8.setText(dbcon.rs.getString(4));
//
//        } catch (Exception e) {
//        }
    }

    void clear() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
         jTextField9.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
    }

    private void delete() {

        try{
            dbcon.ps = dbcon.con.prepareStatement("DELETE FROM user where cusid='" + comboItemCode.getSelectedItem().toString() + "'");
            dbcon.ps.execute();
        } catch (Exception e) {
            System.out.println("red " + e.getMessage());
        }
    
        
//        try {
//            int row = jTable2.getSelectedRow();
//            String User = (jTable2.getModel().getValueAt(row, 0).toString());
//
//            String SQLCommand = "select cusid from user";
//            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
//            ResultSetMetaData md = dbcon.rs.getMetaData();
//            int nColumns = md.getColumnCount();
//            while (dbcon.rs.next()) {
//                rowData = new String[nColumns];
//                for (int i = 0; i < nColumns; i++) {
//                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
//                    data.addElement(rowData[i]);
//
//                }
//            }
//            if (data.contains(User)) {
//                int response = JOptionPane.showConfirmDialog(rootPane, "Are sure you want to delete from database?\n");
//                if (response == JOptionPane.YES_OPTION) {
//
//                    //String phn1 = jTextField3.getText();
//                    dbcon.ps = dbcon.con.prepareStatement("delete from user where cusid='" + User + "'");
//                    JOptionPane.showMessageDialog(rootPane, "Customer record has been deleted and \ncannot be retrieved anymore");
//                    dbcon.ps.executeUpdate();
//                }
//            } else {
//                // JOptionPane.showMessageDialog(rootPane,"student does not exits");
//                JOptionPane.showMessageDialog(null, "Customer details does not exit");
//            }
//        } catch (Exception e) {
//            System.out.println("there's error" + e);
//        }
//        setcus();
    }

    private void update() {
        String cusid = jTextField9.getText();
        String Name = jTextField6.getText();
        String add = jTextField7.getText();
        String mobileNo = jTextField8.getText();
        try {

            dbcon.ps = dbcon.con.prepareStatement("update user set cusid='"+cusid+"',Name='"+Name+"',Address='"+add+"',mobileNo='"+mobileNo+"' where cusid='" + cusid + "'");
            dbcon.ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("red " + e.getMessage());
        }
    }

    public void getItems(String key,String key1) {
            combomodel =new DefaultComboBoxModel();
          combomodel1 =new DefaultComboBoxModel();
          dataSet = new DefaultTableModel();
        dataSet.addColumn("Customer id");
        dataSet.addColumn("Name");
        dataSet.addColumn("Address");
        dataSet.addColumn("Mobile No");
       
            try {
                if(!key.isEmpty()){
                    dbcon.rs = dbcon.st.executeQuery("select * from user WHERE cusid like '"+"%"+key+"%"+"'");
                }else if(!key1.isEmpty()){
                    dbcon.rs = dbcon.st.executeQuery("select * from user WHERE Name like '"+"%"+key1+"%"+"'");
                }else{
                    dbcon.rs = dbcon.st.executeQuery("select * from user");
                }
                while (dbcon.rs.next()) {  
                    String name=dbcon.rs.getString("name");
                    String id=dbcon.rs.getString("cusid");
                Object [] data = new Object[]{id,name,dbcon.rs.getString("Address"),dbcon.rs.getString("mobileNo")};
                combomodel.addElement(id);
                combomodel1.addElement(name);  
                dataSet.addRow(data);
            }
                  comboItemCode.setModel(combomodel);
                    comboItemCode1.setModel(combomodel1);
                     jTable1.setModel(dataSet);
                   
//            Session session;
//            Transaction tran;
//            session = HibernateUtil.getSessionFactory().openSession();
//            session.beginTransaction();
//            Query q = session.createQuery("from items where item=:p").setParameter("p", comboItemCode.getSelectedItem().toString());//change to cell editor
//            System.out.println("1");
//            items itm = (items) q.uniqueResult();
//            if (itm != null) {
//                selectItem = itm.getItem();
//                txtDescription.setText(itm.getItemcode());
//                txtAmount.setText("" + itm.getSelling_price());
//                txtPrice.setText("" + itm.getSelling_price());
//                if (Integer.parseInt(txtQuantity.getText()) > itm.getQuantity()) {
//                    jButton1.setEnabled(false);
//                    JOptionPane.showMessageDialog(this, "Please the Quantity of Item not up to " + txtQuantity.getText());
//                    return;
//                }
//            }
        } catch (Exception e) {
            System.out.println("get item " + e);
        }
    }

    public void getItem(String item,String item1) {
        System.out.println("ITEM "+item);
        try {
              if(!item.isEmpty()){
                    dbcon.rs = dbcon.st.executeQuery("select * from user WHERE cusid = '"+item+"'");
                }else if(!item1.isEmpty()){
                    dbcon.rs = dbcon.st.executeQuery("select * from user WHERE name = '"+item1+"'");
                } 
                if (dbcon.rs.next()) {                
                jTextField9.setText(dbcon.rs.getString("cusid"));
                jTextField6.setText(dbcon.rs.getString("name"));  
                   jTextField7.setText(dbcon.rs.getString("Address"));
                jTextField8.setText(dbcon.rs.getString("mobileNo"));  
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
     
                    

    }
}
