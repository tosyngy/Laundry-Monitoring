package laundry;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static laundry.Customerlist.dataSet;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author damhiesax
 */
public class ItemStorage extends javax.swing.JFrame {

    DbConnect dbcon = new DbConnect();
    DefaultTableModel resultTable;
    DefaultComboBoxModel combomodel;
    long catID;
    String catDes;
    Vector<String> ProductCat = new Vector<String>();
    StringBuffer sb = new StringBuffer();
    public static String[] rowData;
    Vector<String> data = new Vector<String>();
    Vector<String> data2 = new Vector<String>();
    String query;

    /**
     * Creates new form ItemStorage
     */
    public ItemStorage() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setTitle("ITEM STORAGE");
       query= "Select * from item";
        setcus();
        getCat();
        jTextField4.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(30, 70, 170, 30);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel2.setText("Product Category");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 50, 140, 18);

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel3.setText("Product Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(230, 50, 110, 18);

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel4.setText("Sales Price");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(390, 50, 100, 18);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(220, 70, 160, 30);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(390, 70, 180, 30);

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(290, 110, 90, 30);

        jButton2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton2.setText("CLOSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(420, 110, 150, 30);

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel6.setText("Type Keyword To Filter Product");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 220, 240, 30);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField3);
        jTextField3.setBounds(260, 220, 320, 30);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(390, 260, 190, 30);
        jPanel1.add(jTextField5);
        jTextField5.setBounds(390, 300, 190, 30);
        jPanel1.add(jTextField6);
        jTextField6.setBounds(390, 340, 190, 30);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(460, 390, 110, 23);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(460, 420, 110, 23);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Remove");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(460, 450, 110, 23);

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 3, 13)); // NOI18N
        jLabel7.setText("Powered by Teesoft");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(430, 530, 150, 18);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(460, 480, 110, 23);

        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "NEW PRODUCT STORAGE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Lucida Sans", 1, 18))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 590, 160);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable( int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 260, 360, 250);

        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "UPDATE STORAGE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Lucida Sans", 1, 18))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 190, 590, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RegItem();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to close");
        if (res == JOptionPane.YES_OPTION) {
            this.dispose();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        update();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        delete();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        setcus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        MessageFormat header = new MessageFormat("Report Print");

        MessageFormat footer = new MessageFormat("Page{0,number,integer}");

        try {
            jTable1.print(JTable.PrintMode.NORMAL, header, footer);

        } catch (java.awt.print.PrinterException e) {
            System.out.println("printing not successful" + e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        showtext();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            showtext();
        } else {

        }

// TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        String key=jTextField3.getText();
        query= "Select * from item where productCat like '"+"%"+key+"%"+"' OR productName like '"+"%"+key+"%"+"' OR productPrice like '"+"%"+key+"%"+"'";
                setcus();

    }//GEN-LAST:event_jTextField3KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemStorage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemStorage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemStorage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemStorage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemStorage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

    private void RegItem() {
        String conf = jComboBox1.getSelectedItem().toString();
        String man = jTextField1.getText();

        try {
            dbcon.con.setAutoCommit(false);
            String SQLCommand = "select * from item where productCat= '" + conf + "'";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
            ResultSetMetaData md = dbcon.rs.getMetaData();
            int nColumns = md.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns];
                for (int i = 0; i < nColumns; i++) {
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data.addElement(rowData[i]);

                }
            }

            String SQLCommand2 = "select productName from item ";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand2);
            ResultSetMetaData md2 = dbcon.rs.getMetaData();
            int nColumns2 = md2.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns2];
                for (int i = 0; i < nColumns2; i++) {
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data2.addElement(rowData[i]);

                }
            }

            if (data.contains(conf) & data2.contains(man)) {
                JOptionPane.showMessageDialog(null, "Item exist");
            } else {

                String productCat = jComboBox1.getSelectedItem().toString();
                String productName = jTextField1.getText();
                String productPrice = jTextField2.getText();
                String id;
                String visit = "";

                if (productName.equals(visit) || productPrice.equals(visit)) {
                    JOptionPane.showMessageDialog(null, "You can not enter a blank record");
                } else {
                    dbcon.ps = dbcon.con.prepareStatement("insert into item values (?,?,?)");
                    dbcon.ps.setString(1, productCat);
                    dbcon.ps.setString(2, productName);
                    dbcon.ps.setString(3, productPrice);

                    JOptionPane.showMessageDialog(null, "Item Registered Succesfully");
                    clear();

                }
                dbcon.ps.executeUpdate();
            }

        } catch (Exception g) {
            System.out.print("there is error" + g);
        }
        setcus();
    }

    void clear() {
        jTextField1.setText("");
        jTextField2.setText("");
    }

    public void setcus() {
        dataSet = new DefaultTableModel();
        dataSet.addColumn("ProducCat");
        dataSet.addColumn("ProductName");
        dataSet.addColumn("Price");

        dis();
        jTable1.setModel(dataSet);
    }

    private void dis() {

        try {
            int row = dataSet.getRowCount();
            while (row > 0) {
                row--;
                dataSet.removeRow(row);
            }

            //execute query
            ResultSet rs = dbcon.st.executeQuery(query);

            //get metadata
            ResultSetMetaData md = rs.getMetaData();
            int colcount = md.getColumnCount();

            Object[] data = new Object[colcount];
            //extracting data

            while (rs.next()) {
                for (int i = 1; i <= colcount; i++) {
                    data[i - 1] = rs.getString(i);
                }
                dataSet.addRow(data);
            }

        } catch (Exception g) {
            System.out.println(g);

        }
    }

    void showtext() {
        try {

            int row = jTable1.getSelectedRow();
            String User = (jTable1.getModel().getValueAt(row, 0).toString());
            String mine = (jTable1.getModel().getValueAt(row, 1).toString());

            String SQLCommand = ("select * from item where productCat='" + User + "' AND productName='" + mine + "'");
            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
            dbcon.rs.next();
            jTextField4.setText(dbcon.rs.getString(1));
            jTextField5.setText(dbcon.rs.getString(2));
            jTextField6.setText(dbcon.rs.getString(3));
        } catch (Exception e) {
        }
    }

    private void delete() {

        try {
            int row = jTable1.getSelectedRow();
            if(row==-1){
             JOptionPane.showMessageDialog(null, "Please select the row you wish to remove");
             return;
            }
            String User = (jTable1.getModel().getValueAt(row, 0).toString());
            String mine = (jTable1.getModel().getValueAt(row, 1).toString());

            String SQLCommand = "select * from item where productCat = '" + User + "'";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
            ResultSetMetaData md = dbcon.rs.getMetaData();
            int nColumns = md.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns];
                for (int i = 0; i < nColumns; i++) {
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data.addElement(rowData[i]);

                }
            }
            String SQLCommand2 = "select * from item where productName = '" + User + "'";
            dbcon.rs = dbcon.st.executeQuery(SQLCommand);
            ResultSetMetaData md2 = dbcon.rs.getMetaData();
            int nColumns2 = md2.getColumnCount();
            while (dbcon.rs.next()) {
                rowData = new String[nColumns2];
                for (int i = 0; i < nColumns2; i++) {
                    rowData[i] = dbcon.rs.getObject(i + 1).toString();
                    data2.addElement(rowData[i]);

                }
            }

            if (data.contains(User) & data2.contains(mine)) {
                int response = JOptionPane.showConfirmDialog(rootPane, "Are sure you want to delete from database?");
                if (response == JOptionPane.YES_OPTION) {
                    dbcon.ps = dbcon.con.prepareStatement("delete from item where productCat='" + User + "' AND productName ='" + mine + "'");
                    JOptionPane.showMessageDialog(rootPane, "Item record deleted");
                    dbcon.ps.executeUpdate();
                }
            } else {
                    JOptionPane.showMessageDialog(null, "Item details does not exit");
            }
        } catch (Exception e) {
            System.out.println("there's error" + e);
        }
        setcus();
    }

    void update() {

        int row=-1;
                row= jTable1.getSelectedRow();
        if(row!=-1){
        String User = (jTable1.getModel().getValueAt(row, 0).toString());
        String mine = (jTable1.getModel().getValueAt(row, 1).toString());

        try {
            String productCat = jTextField4.getText();
            String productName = jTextField5.getText();
            String productPrice = jTextField6.getText();
            String emt = "";
            if (productCat.equals(emt) || productName.equals(emt) || productPrice.equals(emt)) {
                JOptionPane.showMessageDialog(rootPane, "You cannot update an empty data");
            } else {
                dbcon.ps = dbcon.con.prepareStatement("update item set productCat=?,productName=?,productPrice=? where productCat='" + User + "' AND productName ='" + mine + "'");
                dbcon.ps.setString(1, productCat);
                dbcon.ps.setString(2, productName);
                dbcon.ps.setString(3, productPrice);

                dbcon.ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "items updated Successfully");
                clear();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        setcus();
    }else{
     JOptionPane.showMessageDialog(rootPane, "Select a Row from the table to update");         
        }
    }
 void getCat(){
    combomodel = new DefaultComboBoxModel();
        try {

            dbcon.rs = dbcon.st.executeQuery("select * from category");
            while(dbcon.rs.next()){
            combomodel.addElement(dbcon.rs.getString("name"));
           }
            jComboBox1.setModel(combomodel);

        } catch (Exception g) {
            System.out.print("there is error" + g);
        }
    }

}
